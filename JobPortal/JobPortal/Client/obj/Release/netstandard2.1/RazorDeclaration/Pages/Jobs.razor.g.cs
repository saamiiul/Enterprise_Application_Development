// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace JobPortal.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using JobPortal.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using JobPortal.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using JobPortal.Client.Pages;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using JobPortal.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using JobPortal.Client.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\_Imports.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/jobs")]
    public partial class Jobs : Microsoft.AspNetCore.Components.ComponentBase, IDisposable
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 157 "C:\Users\samiu\OneDrive\Desktop\Enterprise_Application_Development\JobPortal\JobPortal\Client\Pages\Jobs.razor"
       
    CompanyPost post = new CompanyPost();
    string result = "";
    string loc="";
    CompanyPost[] posts;
    string [] JobLocation;
    string[] JobTitle;
    List<CompanyPost> specificLocations = new List<CompanyPost>();
    List<CompanyPost> specificTitles = new List<CompanyPost>();
    bool showLocation = false;
    bool showJobCard = false;
    bool showTitle = false;
    bool displayspecificLocation = false;
    bool displayspecificTitle = false;
    string searchMsg = "";
    bool displaySearchJob = false;
    bool jobNotFind = false;
    List<CompanyPost> searchJobs = new List<CompanyPost>();
    public void AddPost()
    {
        post.CompanyId = CompanyModel.MyCompanyState.CompanyId;
        Http.PostAsJsonAsync<CompanyPost>("api/CompanyPostCrud", post);
        post = new CompanyPost();

    }
    protected override async Task OnInitializedAsync()
    {
        result = await Http.GetStringAsync("odata/companyPost");
        posts = Newtonsoft.Json.JsonConvert.DeserializeObject<ODataCandidate<CompanyPost>>(result).Value.ToArray();
        CompanyLoginServiceModel.OnChange += StateHasChanged;
        JobLocation = new string[posts.Length];
        for (int i = 0; i < posts.Length; i++)
        {
            JobLocation[i] = posts[i].JobLocation;
        }
        JobLocation=JobLocation.Distinct().ToArray();
        JobTitle = new string[posts.Length];
        for (int i = 0; i < posts.Length; i++)
        {
            JobTitle[i] = posts[i].JobTitle;
        }
        JobTitle = JobTitle.Distinct().ToArray();
        showJobCard = true;
        showLocation = true;
        showTitle = true;

        if(SearchClickModel.MySearchClick)
        {
            if (SearchModel.MySearchJob.MyTitle == "" && SearchModel.MySearchJob.MyLocation == "" && SearchModel.MySearchJob.MyInputField == "")
            {
                searchMsg = "Your Search Job is not Found";
                jobNotFind = true;
            }
            else
            {
                if (SearchModel.MySearchJob.MyTitle != "" && SearchModel.MySearchJob.MyLocation == "" && SearchModel.MySearchJob.MyInputField == "")
                {
                    if(SearchModel.MySearchJob.MyTitle=="All")
                    {
                        foreach(CompanyPost post in posts)
                        {
                            searchJobs.Add(post);
                        }
                    }
                    else
                    {
                        foreach(CompanyPost post in posts)
                        {
                            if(post.JobTitle==SearchModel.MySearchJob.MyTitle)
                            {
                                searchJobs.Add(post);
                            }
                        }
                    }

                }
                else if (SearchModel.MySearchJob.MyTitle == "" && SearchModel.MySearchJob.MyLocation != "" && SearchModel.MySearchJob.MyInputField == "")
                {
                    if (SearchModel.MySearchJob.MyLocation == "All")
                    {
                        foreach (CompanyPost post in posts)
                        {
                            searchJobs.Add(post);
                        }
                    }
                    else
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if (post.JobLocation == SearchModel.MySearchJob.MyLocation)
                            {
                                searchJobs.Add(post);
                            }
                        }
                    }
                }

                else if (SearchModel.MySearchJob.MyTitle == "" && SearchModel.MySearchJob.MyLocation == "" && SearchModel.MySearchJob.MyInputField != "")
                {
                    foreach(CompanyPost post in posts)
                    {
                        if(post.JobTitle.ToLower()==SearchModel.MySearchJob.MyInputField.ToLower())
                        {
                            searchJobs.Add(post);
                        }
                    }

                }

                else if (SearchModel.MySearchJob.MyTitle != "" && SearchModel.MySearchJob.MyLocation != "" && SearchModel.MySearchJob.MyInputField == "")
                {
                    if(SearchModel.MySearchJob.MyLocation=="All" && SearchModel.MySearchJob.MyTitle=="All")
                    {
                        foreach(CompanyPost post in posts)
                        {
                            searchJobs.Add(post);
                        }
                    }
                    else if(SearchModel.MySearchJob.MyTitle!="All"&& SearchModel.MySearchJob.MyLocation=="All")
                    {
                        foreach(CompanyPost post in posts)
                        {
                            if(post.JobTitle==SearchModel.MySearchJob.MyTitle)
                            {
                                searchJobs.Add(post);
                            }
                        }
                    }
                    else if (SearchModel.MySearchJob.MyTitle == "All" && SearchModel.MySearchJob.MyLocation != "All")
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if (post.JobLocation == SearchModel.MySearchJob.MyLocation)
                            {
                                searchJobs.Add(post);
                            }
                        }
                    }
                    else
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if(SearchModel.MySearchJob.MyLocation==post.JobLocation&&SearchModel.MySearchJob.MyTitle==post.JobTitle)
                            {
                                searchJobs.Add(post);
                            }

                        }
                    }
                }

                else if (SearchModel.MySearchJob.MyTitle != "" && SearchModel.MySearchJob.MyLocation == "" && SearchModel.MySearchJob.MyInputField != "")
                {
                    if (SearchModel.MySearchJob.MyTitle == "All")
                    {
                        foreach (CompanyPost post in posts)
                        {
                            searchJobs.Add(post);
                        }
                    }
                    else
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if (SearchModel.MySearchJob.MyInputField == post.JobTitle || SearchModel.MySearchJob.MyTitle == post.JobTitle)
                            {
                                searchJobs.Add(post);
                            }

                        }
                    }
                }

                else if (SearchModel.MySearchJob.MyTitle == "" && SearchModel.MySearchJob.MyLocation != "" && SearchModel.MySearchJob.MyInputField != "")
                {
                    if (SearchModel.MySearchJob.MyLocation == "All")
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if (post.JobTitle.ToLower() == SearchModel.MySearchJob.MyInputField.ToLower())
                            {
                                searchJobs.Add(post);
                            }
                        }
                    }
                    else
                    {
                        foreach (CompanyPost post in posts)
                        {
                            if (SearchModel.MySearchJob.MyLocation == post.JobLocation && SearchModel.MySearchJob.MyInputField.ToLower() == post.JobTitle.ToLower())
                            {
                                searchJobs.Add(post);
                            }

                        }
                    }
                }
                else
                {
                    foreach(CompanyPost post in posts)
                    {
                        if(((SearchModel.MySearchJob.MyTitle == post.JobTitle) && (SearchModel.MySearchJob.MyLocation == post.JobLocation))|| (SearchModel.MySearchJob.MyInputField.ToLower() == post.JobTitle.ToLower()) && (SearchModel.MySearchJob.MyLocation == post.JobLocation))
                        {
                            searchJobs.Add(post);
                        }
                    }
                }
            }
        }
        if(searchJobs.Count!=0)
        {
            displaySearchJob = true;
            showJobCard = false;
            displayspecificLocation = false;
            displayspecificTitle = false;
        }
        else
        {
            showJobCard = false;
            displaySearchJob = false;
        }
    }
    void displayAllJobs()
    {
        showJobCard = true;
        displaySearchJob = false;
        displayspecificLocation = false;
        displayspecificTitle = false;
        jobNotFind = false;
    }
    void CheckboxClicked(string CheckID, object checkedValue)
    {
        if (!(bool)checkedValue)
        {
            foreach(CompanyPost postLoop in specificLocations.ToArray())
            {
                if(CheckID==postLoop.JobLocation)
                {
                    specificLocations.Remove(postLoop);
                    if (specificLocations.Count == 0)
                    {
                        displayspecificLocation = false;
                        if (specificTitles.Count == 0)
                        {
                            showJobCard = true;
                        }
                    }
                }
            }

        }
        else
        {
            foreach (CompanyPost postLoop in posts)
            {
                if (CheckID == postLoop.JobLocation)
                {
                    specificLocations.Add(postLoop);
                    showJobCard = false;
                    displayspecificLocation = true;
                }
            }

        }

    }

    void TitleCheckboxClicked(string CheckID, object checkedValue)
    {
        if (!(bool)checkedValue)
        {
            foreach (CompanyPost postLoop in specificTitles.ToArray())
            {
                if (CheckID == postLoop.JobTitle)
                {
                    specificTitles.Remove(postLoop);
                    if (specificTitles.Count == 0)
                    {
                        displayspecificTitle = false;
                        if (specificLocations.Count == 0)
                        {
                            showJobCard = true;
                        }
                    }
                }
            }
        }
        else
        {
            foreach (CompanyPost postLoop in posts)
            {
                if (CheckID == postLoop.JobTitle)
                {
                    specificTitles.Add(postLoop);
                    showJobCard = false;
                    displayspecificTitle = true;
                }
            }
        }

    }

    public void Dispose()
    {
        CompanyLoginServiceModel.OnChange -= StateHasChanged;
        SearchModel.OnChange -= StateHasChanged;
        SearchClickModel.OnChange -= StateHasChanged;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SearchServiceClick SearchClickModel { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SearchService SearchModel { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CompanyLoginService CompanyLoginServiceModel { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CandidateStateService CandidateModel { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private CompanyStateService CompanyModel { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
